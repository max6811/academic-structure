management.endpoints.web.exposure.include=* 
### for show more info from managment
serve.error.include-stacktrece=ON_PARAM

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
### crear y eliminar tabla existente (create-drop)
spring.jpa.hibernate.ddl-auto=create-drop

# ==================================================
# =   DATA SOURCE
# ==================================================

# Connection url for the database
# MySQL Configuration
#     * JUPITER_DBMS = mysql
#     * JUPITER_DB_PORT = 3306
# PostgreSQL Configuration
#     * JUPITER_DBMS = postgresql
#     * JUPITER_DB_PORT = 5432
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/JPA2
#### usar variables de entorno Buena paractica ${password}
spring.datasource.username=postgres
spring.datasource.password=postgres


##### when I neede to test and my db start with clean data initials
##busca archivos de configuracion para generar la garga de datos o esquemas
spring.sql.init.mode=always

##inicia antes de de crear la tabla,
spring.jpa.defer-datasource-initialization=true

